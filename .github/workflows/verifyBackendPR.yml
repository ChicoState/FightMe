name: Java CI with Maven

on:
  push:
    branches:
      - main
      - githubActions
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: UserDB
          POSTGRES_PASSWORD: abc123
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and Test with Maven
      working-directory: backend
      env:
        # Spring Boot Database Configuration
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/UserDB
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: abc123
        SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
      run: |
        mvn clean verify \
        -Dspring.datasource.url=$SPRING_DATASOURCE_URL \
        -Dspring.datasource.username=$SPRING_DATASOURCE_USERNAME \
        -Dspring.datasource.password=$SPRING_DATASOURCE_PASSWORD \
        -Dspring.jpa.hibernate.ddl-auto=create-drop
 
    - name: Parse and Annotate Test Results
      if: always() # Run this step even if the previous steps fail
      run: |
        # Install 'jq' for parsing JSON if needed
        sudo apt-get install jq -y
        
        # Parse Surefire and Failsafe reports for test results
        for file in backend/target/surefire-reports/TEST-*.xml backend/target/failsafe-reports/TEST-*.xml; do
          if [ -f "$file" ]; then
            errors=$(xmllint --xpath "string(//testsuite/@errors)" $file || echo "0")
            failures=$(xmllint --xpath "string(//testsuite/@failures)" $file || echo "0")
            if [ "$errors" -ne "0" ] || [ "$failures" -ne "0" ]; then
              test_name=$(xmllint --xpath "string(//testsuite/@name)" $file)
              echo "::error file=$file,line=1::Test suite '$test_name' has $errors errors and $failures failures."
            fi
          fi
        done